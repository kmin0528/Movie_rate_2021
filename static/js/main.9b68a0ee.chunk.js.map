{"version":3,"sources":["routes/About.js","components/Movie.js","routes/Home.js","components/Navigation.js","routes/Detail.js","App.js","index.js"],"names":["About","props","console","log","className","Movie","title","year","summary","poster","genres","to","pathname","state","src","alt","map","genre","index","slice","Home","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","Navigation","Detail","location","history","undefined","push","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"6SAiBeA,MAdf,SAAeC,GAEX,OADAC,QAAQC,IAAIF,GAER,sBAAKG,UAAU,mBAAf,UACA,sIAKA,4D,gFC0BOC,MAjCf,YAAyD,IAAxCC,EAAuC,EAAvCA,MAAOC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,OAC3C,OACI,qBAAKN,UAAY,QAAjB,SACI,eAAC,IAAD,CACAO,GAAI,CACAC,SAAU,gBACVC,MAAO,CAACN,OAAKD,QAAME,UAAQC,SAAOC,WAHtC,UAKA,qBAAKI,IAAOL,EAAQM,IAAMT,EAAOA,MAAOA,IACxC,sBAAKF,UAAY,cAAjB,UACI,oBAAIA,UAAW,eAAf,SAA+BE,IAC/B,oBAAIF,UAAW,cAAf,SAA8BG,IAC9B,oBAAIH,UAAW,gBAAf,SACKM,EAAOM,KAAI,SAACC,EAAMC,GACf,OAAO,oBAAgBd,UAAW,eAA3B,SAA2Ca,GAAlCC,QAGxB,oBAAGd,UAAY,iBAAf,UAAiCI,EAAQW,MAAM,EAAE,KAAjD,kBC+BDC,G,kNA/CbP,MAAQ,CACNQ,WAAW,EACXC,OAAO,I,EAETC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IAAI,4DALV,gBAGCJ,EAHD,EAERK,KACEA,KAAOL,OAGX,EAAKM,SAAS,CAACN,SAAQD,WAAW,IANxB,2C,uDASZ,WAEEQ,KAAKN,c,oBAEP,WACE,MAA6BM,KAAKhB,MAA1BQ,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,OACnB,OACA,yBAASlB,UAAY,YAArB,SACGiB,EACC,qBAAKjB,UAAW,SAAhB,SACE,sBAAMA,UAAY,eAAlB,0BAGA,qBAAKA,UAAW,SAAhB,SACGkB,EAAON,KAAI,SAAAc,GAAK,OAEtB,aADK,CACJ,EAAD,CACGC,GAAID,EAAMC,GACVxB,KAAMuB,EAAMvB,KACZD,MAAOwB,EAAMxB,MACbE,QAASsB,EAAMtB,QACfC,OAAQqB,EAAME,mBACdtB,OAAQoB,EAAMpB,oB,GApCLuB,IAAMC,Y,MCQVC,MATf,WACI,OACI,sBAAK/B,UAAU,MAAf,UACI,cAAC,IAAD,CAAMO,GAAK,IAAX,kBACA,cAAC,IAAD,CAAMA,GAAK,SAAX,uBCYGyB,E,uKAjBX,WACI,MAA8BP,KAAK5B,MAA3BoC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aACAC,GAAlBF,EAASxB,OACTyB,EAAQE,KAAK,O,oBAIjB,WACI,IAAOH,EAAYR,KAAK5B,MAAjBoC,SACP,OAAIA,EAASxB,MACN,+BAAOwB,EAASxB,MAAMP,QAEtB,S,GAbM2B,IAAMC,WCiBZO,MAXf,WACE,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAOC,KAAM,IAAIC,OAAO,EAAMC,UAAWxB,IACzC,cAAC,IAAD,CAAOsB,KAAM,SAASE,UAAW5C,IACjC,cAAC,IAAD,CAAO0C,KAAM,gBAAgBE,UAAWR,QCV9CS,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.9b68a0ee.chunk.js","sourcesContent":["import React from 'react';\r\nimport './About.css';\r\n\r\nfunction About(props) {\r\n    console.log(props);\r\n    return (\r\n        <div className=\"about__container\">\r\n        <span>\r\n        \"Freedom is the freedom to say that two plus two make four. If\r\n         that is granted, all else\r\n         follows.\"\r\n        </span>\r\n        <span>-George Orwell, 1984</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Movie.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Movie({ title, year, summary, poster, genres}) {\r\n    return (\r\n        <div className = \"movie\">\r\n            <Link\r\n            to={{\r\n                pathname: '/movie-detail',\r\n                state: {year,title,summary,poster,genres},            }}\r\n            >\r\n            <img src = {poster} alt ={title} title={title}/>\r\n            <div className = \"movie__data\">\r\n                <h3 className =\"movie__title\">{title}</h3>\r\n                <h5 className =\"movie__year\">{year}</h5>\r\n                <ul className= \"movie__genres\">\r\n                    {genres.map((genre,index) => {\r\n                        return <li key={index} className =\"movie__genre\">{genre}</li>; //li 엘리멘트 여러 개 출력\r\n                    })}\r\n                </ul>\r\n                <p className = \"movie__summary\">{summary.slice(0,180)}...</p>\r\n                {/*시놉시스 글자 180자 이내로 제한*/}\r\n            </div>\r\n            </Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nMovie.propTypes = {\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired, \r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n}; \r\n// API내에서 필요한 값들 호출\r\nexport default Movie;","import React from 'react';\r\nimport axios from 'axios';\r\nimport Movie from '../components/Movie';\r\nimport './Home.css';\r\n\r\nclass Home extends React.Component {\r\n  state = {\r\n    isLoading: true,\r\n    movies:[],\r\n  };\r\n  getMovies = async () => {  //javaScript에게 getMovies() 함수는 시간이 필요하다.\r\n    const{\r\n      data: { //여기서 data ->,\r\n        data: {movies}, //여기서 data -> movies 가 진행된다.\r\n      },\r\n    } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");// axios.get()의 실행을 기다려달라고 한다. // 평점 내림차순 데이터 GET\r\n    this.setState({movies, isLoading: false}); // 구조 분해 할당으로 얻은 영화 데이터가 있는 변수\r\n  }              //↑state//\r\n    \r\n  componentDidMount() {\r\n    // 영화 데이터 로딩\r\n    this.getMovies();\r\n  }\r\n  render () {\r\n    const { isLoading ,movies} = this.state; \r\n    return (\r\n    <section className = \"container\">   \r\n      {isLoading ? (\r\n        <div className =\"loader\">\r\n          <span className = \"loader__text\">Loading...</span> \r\n          </div>\r\n          ):( \r\n          <div className =\"movies\">  \r\n            {movies.map(movie => (\r\n            //movies는 배열, 배열의 원소 한개가 movie로 넘어온다.\r\n       <Movie \r\n          id={movie.id}\r\n          year={movie.year}\r\n          title={movie.title}\r\n          summary={movie.summary}\r\n          poster={movie.medium_cover_image}\r\n          genres={movie.genres}\r\n            />\r\n      ))} \r\n      {/*  //Movie 컴포넌트 출력 */}\r\n    </div>\r\n    )} \r\n    </section>\r\n    //'We are ready 자리에 영화 데이터 출력함'\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './Navigation.css';\r\n\r\nfunction Navigation() {\r\n    return (\r\n        <div className=\"nav\">\r\n            <Link to = \"/\">Home</Link>\r\n            <Link to = \"/about\">About</Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\n\r\nclass Detail extends React.Component {\r\n    componentDidMount() { //Detail component가 마운트되면\r\n        const { location, history } = this.props; // 구조 분해 할당으로 location,history를 얻는다.\r\n    if (location.state == undefined) { //만약 location.state가 없는경우\r\n        history.push('/'); //Home으로 이동\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {location} = this.props;\r\n        if (location.state) {\r\n        return <span>{location.state.title}</span>;\r\n        }else{\r\n        return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default Detail;","import React from 'react';\nimport './App.css';\nimport {HashRouter, Route} from 'react-router-dom';\nimport About from './routes/About';\nimport Home from './routes/Home';\nimport Navigation from './components/Navigation';\nimport Detail from './routes/Detail';\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Navigation/>\n      <Route path =\"/\" exact={true} component={Home}/>\n      <Route path =\"/about\" component={About} />\n      <Route path =\"/movie-detail\" component={Detail}/>\n    </HashRouter>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n"],"sourceRoot":""}